Map inputSource = (Map)params.get("source");
Map targetSource = (Map)((Map)params.get("ctx")).get("_source");
// Check if we have handled this message before.
long inputHash = ((List)inputSource.get("event_hashes")).get(0);
List targetHashes = (List)targetSource.get("event_hashes");
if (targetHashes != null) {
	for (int i=0; i < targetHashes.size(); i++) {
		if ( ((long)targetHashes.get(i)) == inputHash) {
			return;
		}
	}
	targetHashes.add(inputHash);
}

Map tempForCorrelations = (Map)targetSource.get("temp_for_correlations");
boolean correlatedBeforeInserted = false;
if (targetSource.get("payload") == null &&
    targetSource.get("correlations") != null) {
    // The correlation to this event is stored before the event itself is stored. Merge the entire event.
    correlatedBeforeInserted = true;
    List correlations = (List)targetSource.get("correlations");
    
    targetSource = inputSource;
    targetSource.put("correlations", correlations);
    if (tempForCorrelations != null) {
	    targetSource.put("temp_for_correlations", tempForCorrelations);
    }
    ((Map)params.get("ctx")).put("_source", targetSource);
}

// Merge the endpoints.
List inputEndpoints = (List)inputSource.get("endpoints");
List targetEndpoints = (List)targetSource.get("endpoints");
if (inputEndpoints != null && !correlatedBeforeInserted) {
    // Merge endpoints
    for (int sourceEndpointIx=0; sourceEndpointIx < inputEndpoints.size(); sourceEndpointIx++) {
        int targetEndpointIx = -1;
        Map inputEndpoint = (Map)inputEndpoints.get(sourceEndpointIx);
        // Try to find if an endpoint with a given name is present.
        if (targetEndpoints != null) {
            for (int i=0; i < targetEndpoints.size(); i++) { 
            	if ( ((String)((Map)targetEndpoints.get(i)).get("name")).equals(((String)inputEndpoint.get("name"))) ) {
                    targetEndpointIx = i;
//COMPILE ERRORS SINCE ALPHA3                    
//                    break;
                }
            }
        }
        if (targetEndpointIx == -1) {
            // This endpoint was not present.
            if (targetEndpoints == null) {
            	targetEndpoints = new ArrayList();
                targetSource.put("endpoints", targetEndpoints);
            }
            targetEndpoints.add(inputEndpoint);
        } else {
        	Map targetEndpoint = (Map)targetEndpoints.get(targetEndpointIx);
        	Map targetWritingEndpointHandler = (Map)targetEndpoint.get("writing_endpoint_handler");
        	Map inputWritingEndpointHandler = (Map)inputEndpoint.get("writing_endpoint_handler");
            // Endpoint was present. Set writing handler to target if target has no writing handler currently.
            if ((targetWritingEndpointHandler == null ||
            	 targetWritingEndpointHandler.get("transactionId") == null ||
            	 targetWritingEndpointHandler.get("location") == null ||
            	 targetWritingEndpointHandler.get("application") == null
            	) && inputWritingEndpointHandler != null) { 
            	targetEndpoint.put("writing_endpoint_handler", inputWritingEndpointHandler);
            }
            List inputReadingEndpointHandlers = (List)inputEndpoint.get("reading_endpoint_handlers"); 
            if (inputReadingEndpointHandlers != null) {
                // Add reading endpoint handlers to target.
                List targetReadingEndpointHandlers = (List)targetEndpoint.get("reading_endpoint_handlers");
                if (targetReadingEndpointHandlers == null) {
                	targetReadingEndpointHandlers = new ArrayList();
                    targetEndpoint.put("reading_endpoint_handlers", targetReadingEndpointHandlers);
                }
                for (int i=0; i < inputReadingEndpointHandlers.size(); i++) {
                    targetReadingEndpointHandlers.add(inputReadingEndpointHandlers.get(i));
                }
            }
        }
    }
 }
 
// Recalculate latencies
if (targetEndpoints != null) {
    for (int i=0; i < targetEndpoints.size(); i++) {
    	Map targetWritingEndpointHandler = (Map)((Map)targetEndpoints.get(i)).get("writing_endpoint_handler");
    	if (targetWritingEndpointHandler != null &&
    	    targetWritingEndpointHandler.get("handling_time") != null) {
    	    long writeTime = (long)targetWritingEndpointHandler.get("handling_time");
    	    List readingEndpointHandlers = (List)((Map)targetEndpoints.get(i)).get("reading_endpoint_handlers");
    	    if (readingEndpointHandlers != null) {
    	    	for (int j=0; j < readingEndpointHandlers.size(); j++) {
    	    		Map readingEndpointHandler = readingEndpointHandlers.get(j);
    	    		if (readingEndpointHandler.get("handling_time") != null) {
    	    			readingEndpointHandler.put("latency",  ((long)readingEndpointHandler.get("handling_time")) - writeTime);
    	    		}
    	    	}
    	    }
    	}
    }
}
// Check for response times to be updated
if (tempForCorrelations != null) {
	List dataForReaders = (List)tempForCorrelations.get("data_for_readers");
	if (dataForReaders != null && targetEndpoints != null) {
		Iterator it = dataForReaders.iterator();
		while (it.hasNext()) {
			Map dataForReader = (Map)it.next();
			String appName = (String)dataForReader.get("name");
			for (int j=0; j < targetEndpoints.size(); j++) {
				Map targetEndpoint = (Map)targetEndpoints.get(j);
				if (targetEndpoint.get("reading_endpoint_handlers") != null) {
					List readerEndpointHandlers = (List)targetEndpoint.get("reading_endpoint_handlers");
					for (int k=0; k < readerEndpointHandlers.size(); k++) {
						Map readingEndpointHandler = (Map)readerEndpointHandlers.get(k);
						if (readingEndpointHandler.get("application") != null &&
						    ((Map)readingEndpointHandler.get("application")).get("name") != null &&  
						    ((String)((Map)readingEndpointHandler.get("application")).get("name")).equals(appName)) {
						    
						    readingEndpointHandler.put("response_time", ((long)dataForReader.get("handling_time") - (long)readingEndpointHandler.get("handling_time")));
						    it.remove();
						}
					}
				}
			}
		}
		if (dataForReaders.isEmpty()) {
			tempForCorrelations.remove("data_for_readers");
		}
	}
	List dataForWriters = (List)tempForCorrelations.get("data_for_writers");
	if (dataForWriters != null && targetEndpoints != null) {
		Iterator it = dataForWriters.iterator();
		while (it.hasNext()) {
			Map dataForWriter = (Map)it.next();
			String appName = (String)dataForWriter.get("name");
			for (int j=0; j < targetEndpoints.size(); j++) {
				Map targetEndpoint = (Map)targetEndpoints.get(j);
				Map writingEndpointHandler = (Map)targetEndpoint.get("writing_endpoint_handler");
				if (writingEndpointHandler != null &&
					writingEndpointHandler.get("application") != null &&
					((Map)writingEndpointHandler.get("application")).get("name") != null &&  
					((String)((Map)writingEndpointHandler.get("application")).get("name")).equals(appName)) {
					
					writingEndpointHandler.put("response_time", ((long)dataForWriter.get("handling_time") - (long)writingEndpointHandler.get("handling_time")));
					it.remove();
				}
			}			
		}
		if (dataForWriters.isEmpty()) {
			tempForCorrelations.remove("data_for_writers");
		}
	}
	
	if (tempForCorrelations.isEmpty()) {
		targetSource.remove("temp_for_correlations");
	}
}
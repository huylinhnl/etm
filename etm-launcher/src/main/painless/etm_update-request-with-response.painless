boolean setResponseTimeOnEndpointHandlers(List endpointHandlers, String applicationName, long handlingTime, String handlerType) {
	if (endpointHandlers == null) {
		return false;
	}
	boolean updated = false;
	for (Map endpointHandler : endpointHandlers) {
	    if (!handlerType.equals(endpointHandler.get("type"))) {
            continue;
        }
		if (applicationName == null && (endpointHandler.get("application") == null || ((Map)endpointHandler.get("application")).get("name") == null)) {
			long responseTime = handlingTime - (long)endpointHandler.get("handling_time");
			if (responseTime >=0) {
				endpointHandler.put("response_time", responseTime);
				updated = true;
			}
		} else if (applicationName != null && endpointHandler.get("application") != null && applicationName.equals(((Map)endpointHandler.get("application")).get("name"))) {
			long responseTime = handlingTime - (long)endpointHandler.get("handling_time");
			if (responseTime >=0) {
				endpointHandler.put("response_time", responseTime);
				updated = true;
			}
		}
	}
	return updated;
}

boolean setResponseTimeOnReadingEndpointHandlers(List endpointHandlers, String applicationName, long writerHandlingTime) {
    return setResponseTimeOnEndpointHandlers(endpointHandlers, applicationName, writerHandlingTime, "READER");
}

boolean setResponseTimeOnWritingEndpointHandlers(List endpoints, String applicationName, long readerHandlingTime) {
	if (endpoints == null) {
		return false;
	}
	boolean writerUpdated = false;
	for (Map endpoint : endpoints) {
	    writerUpdated = setResponseTimeOnEndpointHandlers((List)endpoint.get("endpoint_handlers"), applicationName, readerHandlingTime, "WRITER") || writerUpdated;
	}
	return writerUpdated;
}

Map getWritingEndpointHandler(List endpointHandlers) {
    if (endpointHandlers == null) {
        return null;
    }
    for (Map endpointHandler : endpointHandlers) {
        if ("WRITER".equals(endpointHandler.get("type"))) {
            return endpointHandler;
        }
    }
    return null;
}

void addDataForReaders(Map source, long handlingTime, String applicationName) {
	Map tempCorrelation = (Map)source.get("temp_for_correlations");
	if (tempCorrelation == null) {
		tempCorrelation = new HashMap();
		source.put("temp_for_correlations", tempCorrelation);
	}
	List dataForReaders = tempCorrelation.get("data_for_readers");
	if (dataForReaders == null) {
		dataForReaders = new ArrayList();
		tempCorrelation.put("data_for_readers", dataForReaders);
	}        			
	Map reader = new HashMap();
	if (applicationName != null) {
		reader.put("name", applicationName);
	}
	reader.put("handling_time", handlingTime);
	dataForReaders.add(reader);
}

void addDataForWriter(Map source, long handlingTime, String applicationName) {
	Map tempCorrelation = (Map)source.get("temp_for_correlations");
	if (tempCorrelation == null) {
		tempCorrelation = new HashMap();
		source.put("temp_for_correlations", tempCorrelation);
	}
	List dataForWriters = tempCorrelation.get("data_for_writers");
	if (dataForWriters == null) {
		dataForWriters = new ArrayList();
		tempCorrelation.put("data_for_writers", dataForWriters);
	}        			
	Map writer = new HashMap();
	if (applicationName != null) {
		writer.put("name", applicationName);
	}
	writer.put("handling_time", handlingTime);
	dataForWriters.add(writer);
}

boolean mainMethod(Map params) {
    Map inputSource = (Map)params.get("source");
    Map targetSource = (Map)((Map)params.get("ctx")).get("_source");
    String inputEventId = (String)params.get("event_id");

    List correlations = (List)targetSource.get("correlations");
    // Add the ID as a correlation.
    if (correlations == null) {
        correlations = new ArrayList();
        targetSource.put("correlations", correlations);
    }
    if (!correlations.contains(inputEventId)) {
        correlations.add(inputEventId);
    }
    // Merge the response times back in the endpoints.
    List inputEndpoints = (List)inputSource.get("endpoints");
    List targetEndpoints = (List)targetSource.get("endpoints");
    if (inputEndpoints != null) {
        for (Map inputEndpoint : inputEndpoints) {
            Map inputWritingEndpointHandler = getWritingEndpointHandler( (List)inputEndpoint.get("endpoint_handlers") );
            if (inputWritingEndpointHandler != null &&
                (inputWritingEndpointHandler.get("application") == null || ((Map)inputWritingEndpointHandler.get("application")).get("name") == null)) {
                // This is a writer on an endpoint without an application defined. Update the response time on target readers + writers without an application defined.
                long writerHandlingTime = (long)inputWritingEndpointHandler.get("handling_time");
                boolean readerFound = false;
                if (targetEndpoints != null) {
                    for (Map targetEndpoint : targetEndpoints) {
                        readerFound = setResponseTimeOnReadingEndpointHandlers((List)targetEndpoint.get("endpoint_handlers"), null, writerHandlingTime) || readerFound;
                    }
                }
                boolean writerFound = false;
                if (!readerFound && targetEndpoints != null) {
                    for (Map targetEndpoint : targetEndpoints) {
                        Map targetWritingEndpointHandler = getWritingEndpointHandler( (List)targetEndpoint.get("endpoint_handlers") );
                        if (targetWritingEndpointHandler != null && targetWritingEndpointHandler.get("application") == null) {
                            long responseTime = writerHandlingTime - (long)targetWritingEndpointHandler.get("handling_time");
                            if (responseTime >=0 ) {
                                targetWritingEndpointHandler.put("response_time", responseTime);
                                writerFound = true;
                            }
                        }
                    }
                }
                if (!readerFound && !writerFound) {
                    addDataForReaders(targetSource, writerHandlingTime, null);
                }
            } else if (inputWritingEndpointHandler != null &&
                inputWritingEndpointHandler.get("application") != null &&
                ((Map)inputWritingEndpointHandler.get("application")).get("name") != null) {
                // This is a writer on an endpoint with an application defined. Update the response time on target readers with the same application defined.
                String writerAppName = (String)((Map)inputWritingEndpointHandler.get("application")).get("name");
                long writerHandlingTime = (long)inputWritingEndpointHandler.get("handling_time");
                // The name of the application that has written the response is found. Now try to find that application in the reading endpoint handlers of the request.
                boolean readerFound = false;
                if (targetEndpoints != null) {
                    for (Map targetEndpoint : targetEndpoints) {
                        readerFound = setResponseTimeOnReadingEndpointHandlers((List)targetEndpoint.get("endpoint_handlers"), writerAppName, writerHandlingTime) || readerFound;
                    }
                }
                if (!readerFound) {
                    addDataForReaders(targetSource, writerHandlingTime, writerAppName);
                }
            }
            List inputEndpointHandlers = (List)inputEndpoint.get("endpoint_handlers");
            if (inputEndpointHandlers != null) {
                for (Map inputEndpointHandler : inputEndpointHandlers) {
                    if (!"READER".equals(inputEndpointHandler.get("type"))) {
                        continue;
                    }
                    if (inputEndpointHandler.get("application") == null || ((Map)inputEndpointHandler.get("application")).get("name") == null) {
                        // This is a reader on an endpoint without an application defined. Update the response time on target readers + writers without an application defined.
                        long readerHandlingTime = (long)inputEndpointHandler.get("handling_time");
                        boolean writerFound = setResponseTimeOnWritingEndpointHandlers(targetEndpoints, null, readerHandlingTime);
                        boolean readerFound = false;
                        if (!writerFound && targetEndpoints != null) {
                            for (Map targetEndpoint : targetEndpoints) {
                                readerFound = setResponseTimeOnReadingEndpointHandlers((List)targetEndpoint.get("endpoint_handlers"), null, readerHandlingTime) || readerFound;
                            }
                        }
                        if (!readerFound && !writerFound) {
                            addDataForWriter(targetSource, readerHandlingTime, null);
                        }
                    } else if (inputEndpointHandler.get("application") != null && ((Map)inputEndpointHandler.get("application")).get("name") != null) {
                        // This is a reader on an endpoint with an application defined. Update the response time on target writer with the same application defined.
                        String readerAppName = (String)((Map)inputEndpointHandler.get("application")).get("name");
                        long readerHandlingTime = (long)inputEndpointHandler.get("handling_time");
                        // The name of the application that has read the response is found. Now try to find that application in the writing endpoint handlers of the request.
                        boolean writerFound = setResponseTimeOnWritingEndpointHandlers(targetEndpoints, readerAppName, readerHandlingTime);
                        if (!writerFound) {
                            addDataForWriter(targetSource, readerHandlingTime, readerAppName);
                        }
                    }
                }
            }
        }
    }
    return true;
}
mainMethod(params);
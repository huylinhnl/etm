= ETM Installatiehandleiding
:doctype: book
:docinfo: docinfo

[[chap-ETM_Installation-Introduction]]
== Introductie

Deze handleiding leidt u door het installatie proces van Enterprise Telemetry Monitor, kortweg ETM. Indien u ETM wilt evalueren kies dan
voor de <<chap-ETM_Installation-Single_Machine_Installation, installatie op 1 machine>>. Wilt u ETM in een productie omgeving installeren 
kies dan voor de <<chap-ETM_Installation-Clustered_Installation, geclusterde installatie>>. In dit document zal veelvuldig gerefereerd 
worden naar '<ETM_UNZIP_DIR>'. Hiermee wordt de directory bedoeld waar u uw ETM download heeft uitgepakt.

[[chap-ETM_Installation-System_Requirements]]
== Systeemeisen
* Java {java_version}
* Wildfly {wildfly_version}
* Cassandra {cassandra_version}
* Solr {solr_version}
* Zookeeper {zookeeper_version}

ETM is ontwikkeld en getest met OpenJDK {java_version} op Fedora Linux. Aangezien ETM een pure Java applicatie is, is het aannemelijk
dat ETM ook zonder problemen op andere besturingssystemen werkt.

[[chap-ETM_Installation-Single_Machine_Installation]]
== Installatie op 1 machine
IMPORTANT: Voor evaluatie doeleinden kan het handig zijn ETM op 1 enkele machine te installeren. Dit is echter geen ondersteunde productie
configuratie. Om de volledige voordelen op het gebied van schaalbaarheid en hoge beschikbaarheid die ETM ondersteund te benutten is een
<<chap-ETM_Installation-Clustered_Installation, geclusterde installatie>> noodzakelijk.  

Voor deze installatie gelden de volgende specificaties:

* Een standalone Solr {solr_version} installatie, waarbinnen een Zookeeper instantie draait.
* Een standalone Cassandra {cassandra_version} installatie.
* Een standalone Wildfly {wildfly_version} draaiend op het 'standalone' profiel.

Voor deze installatie geldt dat er geen replicatie, hoge beschikbaarheid en schaalbaarheid mogelijk is.

=== Standalone Solr
Download Solr {solr_version} van de Solr http://lucene.apache.org/solr/[website], en extract de bestanden van het gedownloade archief. Het archief
kan uitgepakt worden naar elke willekeurige locatie. Deze locatie wordt vanaf nu <SOLR_INSTALL_DIR> genoemd.

Kopieer nadat Solr is uitgepakt het bestand <ETM_UNZIP_DIR>/resources/solr/schema.xml
naar <SOLR_INSTALL_DIR>/server/solr/configsets/basic_configs/schema.xml. Het bestaande bestand mag overschreven worden.

Hierna kan de installatie wizard uitgevoerd worden. Voer hiervoor 
[source,shell] 
----
<SOLR_INSTALL_DIR>/bin/solr -e cloud
----
uit vanaf een command prompt. Gebruik de onderstaande tabel als input voor de wizard.
[options="header"]
|=======================
|Vraag|Waarde
|aantal nodes|1
|port |8983
|collection naam|etm
|aantal shards|1
|replicas|1
|configuration|basic_configs
|=======================

Als u later nogmaals Solr wilt starten voert u 
[source,shell] 
----
<SOLR_INSTALL_DIR>/bin/solr start -cloud -s example/cloud/node1/solr -p 8983
----
uit vanaf een command prompt.

Browse naar http://localhost:8983/solr/ om te controleren dat Solr correct gestart is.

=== Standalone Cassandra
Download Cassandra {cassandra_version} van de Cassandra http://cassandra.apache.org/download/[website], en extract de bestanden van het gedownloade archief.
Het archief kan uitgepakt worden naar elke willekeurige locatie. Deze locatie wordt vanaf nu <CASSANDRA_INSTALL_DIR> genoemd.

Om Cassandra te starten voer
[source,shell] 
----
<CASSANDRA_INSTALL_DIR>/bin/cassandra
----
uit vanaf een command prompt.

Nadat Cassandra is gestart voer
[source,shell]
---- 
<CASSANDRA_INSTALL_DIR>/bin/cqlsh -f <ETM_UNZIP_DIR>/resources/cassandra/cassandra-setup-single-node.cql
----
uit vanaf een command prompt. Het uitgevoerde script zorgt ervoor dat de ETM keyspace + bijbehorende tabellen worden aangemaakt.

[[standalone-wildfly]]
=== Standalone Wildfly
Download Wildfly {wildfly_version} van de Wildfly http://wildfly.org/downloads/[website], en extract de bestanden van het gedownloade archief.
Het archief kan uitgepakt worden naar elke willekeurige locatie. Deze locatie wordt vanaf nu <WILDFLY_INSTALL_DIR> genoemd.

Om een administratieve gebruiker toe te voegen voer 
[source,shell]
----
<WILDFLY_INSTALL_DIR>/bin/add-user.sh
----
uit vanaf een command prompt. Wees er zeker van dat de gebruiker een 'Management User' is die is toegevoegd aan het 'ManagementRealm'.

Deze gebuiker is nodig om in het administration console van Wildfly in te loggen. ETM heeft ook een gebruiker nodig waarmee ingelogd kan worden in ETM zelf.
Voer hiervoor nogmaals het add-user.sh script uit, maar zorg er deze keer voor dat de gebruiker een 'Application User' is die is toegevoegd aan het 'EtmRealm'. 
Ook moet de gebruiker de volgende rollen krijgen:

* etm-administrator
* etm-searcher
* etm-controller 

Open nu het bestand <WILDFLY_INSTALL_DIR>/standalone/configuration/standalone.xml en voeg de volgende xml snippet toe aan de 'security-realms':
[source,xml]
----
<security-realm name="EtmRealm">
    <authentication>
        <local default-user="$local" allowed-users="*" skip-group-loading="true"/>
        <properties path="application-users.properties" relative-to="jboss.server.config.dir"/>
    </authentication>
    <authorization>
        <properties path="application-roles.properties" relative-to="jboss.server.config.dir"/>
    </authorization>
</security-realm>
----

Voeg in ditzelfde bestand de volgende xml snippet toe aan de 'security-domains':
[source,xml]
----
<security-domain name="etm" cache-type="default">
    <authentication>
        <login-module code="RealmDirect" flag="required">
            <module-option name="password-stacking" value="useFirstPass"/>
        </login-module>
    </authentication>
</security-domain>
----

Wildfly is nu klaar om gestart te worden. Voer hiervoor 
[source,shell]
---- 
<WILDFLY_INSTALL_DIR>/bin/standalone.sh
----
uit vanaf een command prompt.

Open http://localhost:9990/console/ in een browser nadat Wildfly gestart is en login met de administratieve gebruiker die u hiervoor aangemaakt heeft. 
Selecteer het 'Configuration' menu en klik op System Properties op het submenu aan de linker kant. Voeg hier de volgende properties toe:
[options="header"]
|=======================
|Key|Value
|etm.nodename|<een unieke node name>
|etm.zookeeper.clients|127.0.0.1:9983
|etm.zookeeper.namespace|demo
|=======================

De volgende stap is om de gewenste ETM componenten te deployen. Afhankelijk van uw behoefte kunt u 1 of meerdere componenten deployen vanaf de
<ETM_UNZIP_DIR>/components directory.

Kopieer de gewenste componenten naar <WILDFLY_INSTALL_DIR>/standalone/deployments waar ze opgepakt worden door Wildfly. Het deployment proces
duurt hierna enkele seconden. Bekijk voor een gedetailleerd overzicht van de componenten en hun instellingen het hoofdstuk <<chap-ETM_Installation-ETM_Components, ETM componenten>.

[[chap-ETM_Installation-Clustered_Installation]]
== Geclusterde installatie
IMPORTANT: ETM is een op JEE gebaseerde Java applicatie die binnen Wildfly gedeployed kan worden. ETM heeft een verbinding nodig met Zookeeper, Solr en Cassandra om
volledig te functioneren. Hoe u uw Wildfly, Zookeeper, Solr en Cassandra clusters in gaat richten hangt af van uw wensen en kan niet in 1 enkele installatie 
handleiding samengevat worden. Dit hoofdstuk kan als voorbeeld genomen worden voor het opzetten van uw Wildfly, Zookeeper, Solr en Cassandra clusters, 
maar voor een optimale situatie zullen deze clusters zo geconfigureerd moeten worden dat deze ideaal zijn voor uw wensen. 

Voor uitgebreide handleidingen dient u de handleidingen van Wildfly, Solr en Cassandra te raadplegen:

* https://docs.jboss.org/author/display/WFLY8/Documentation[Wildfly documentatie]
* http://zookeeper.apache.org/doc/r{zookeeper_version}/[Zookeeper documentatie]
* http://lucene.apache.org/solr/resources.html#documentation[Solr documentatie]
* http://www.datastax.com/docs[Cassandra documentatie @Datastax]

=== Zookeeper cluster

Browse naar http://zookeeper.apache.org/doc/r3.4.6/zookeeperAdmin.html#sc_zkMulitServerSetup en voer de installatie uit. Belangrijk is dat er gekozen wordt voor een oneven
aantal instanties in het Zookeeper ensemble. Aangeraden wordt een ensemble van maximaal 3 of 5 Zookeeper instanties samen te stellen. Bij 3 instanties kan er 1 instantie 
uitvallen zonder dat dit invloed heeft op de werking van de Zookeeper cluster. Bij 5 instanties mogen er 2 instanties uitvallen. Hierdoor is het mogelijk onderhoud te plegen 
op 1 instantie en mag er tijdens dat onderhoud nog een instantie uitvallen zonder dat dit invloed heeft op de werking van de Zookeeper cluster.
Meer dan 5 instanties in een ensemble wordt afgeraden, doordat dit een negatieve impact op de performance gaat hebben.

Nadat u Zookeeper heeft geinstalleerd en gestart moeten er enkele paden in Zookeeper aangemaakt worden. Open hiervoor een Zookeeper shell door 
[source,shell]
---- 
<ZOOKEEPER_INSTALL_DIR>/bin/zkCli.sh
----
uit te voeren vanaf een command prompt.

In de Zookeeper shell voert u vervolgens de volgende commando's uit:
[source,shell]
---- 
create /etm etm               
create /etm/dev etm-development
create /etm/dev/solr solr-development
quit
----

Bovenstaande commando's maken een 'development' omgeving aan. U kunt bijvoorbeeld een productie omgeving aanmaken door de volgende commando's uit te voeren:
[source,shell]
---- 
create /etm etm               
create /etm/prod etm-production
create /etm/prod/solr solr-production
quit
----

Beide omgevingen kunnen naast elkaar bestaan in dezelfde Zookeeper ensemble, maar wilt u een strikt gescheiden OTAP omgeving dan behoort iedere omgeving zijn eigen
Zookeeper ensemble te hebben. Belangrijk is te onthouden wat het pad naar de huidige omgeving is (bijvoorbeeld '/etm/prod'). Deze heeft u later nodig in meerdere 
stappen van de configuratie.

=== Solr cluster

Browse naar https://cwiki.apache.org/confluence/display/solr/Apache+Solr+Reference+Guide en maak u vertrouwd met het 'SolrCloud' hoofdstuk. Eventueel kunt u
enkele voorbeelden uitproberen door 
[source,shell]
---- 
<SOLR_INSTALL_DIR>/bin/solr.sh -e cloud               
----
uit te voeren. Dit script helpt u bij het opzetten van een cluster, waarbij de Solr index is gedistribueerd over meerdere Solr instanties. Voordat u begint aan de
daadwerkelijke installatie is het verstandig met een verse Solr installatie te beginnen. Extract eventueel het gedownloade Solr archief opnieuw naar een schone locatie.
 
Zodra u klaar bent voor de installatie kopieert u het bestand <ETM_UNZIP_DIR>/resources/solr/schema.xml
naar <SOLR_INSTALL_DIR>/server/solr/configsets/basic_configs/schema.xml. Het bestaande bestand mag overschreven worden. 

Indien u uw Zookeeper ensemble nog niet gestart heeft, doe dit dan alsnog en voer hierna
[source,shell]
---- 
<SOLR_INSTALL_DIR>/bin/solr -z localhost:2181/etm/dev/solr -e cloud               
---- 
uit vanaf een command prompt. 

TIP: Uiteraard kan het voorkomen dat uw Zookeeper ensemble op (een) andere machine(s) staat, en dat u een ander path voor Solr in Zookeeper hebt aangemaakt. Pas in
dat geval de connectiestring achter de '-z' optie aan in het commando.

Een connectie naar een geclusterde Zookeeper productie ensemble zou er als volgt uit kunnen zien:
[source,shell]
---- 
<SOLR_INSTALL_DIR>/bin/solr -z 10.0.0.1:2181,10.0.0.2:2181,10.0.0.3:2181/etm/prod/solr -e cloud               
---- 

Het script helpt u stapsgewijs bij het opzetten van een Solr cluster. Wees er zeker van dat u voor de collectienaam 'etm' gebruikt. Wanneer er gevraagd wordt om een 
naam van de configuratie directory beantwoord dan met 'basic_configs'. 

Zodra het script klaar is, is uw Solr cluster aangemaakt en gestart. De data directory van uw instanties is te vinden onder <SOLR_INSTALL_DIR>/example/cloud/node<x>.
U doet er verstandig aan deze directory te verplaatsen naar een voor u logische plaats. Doe dit pas nadat u de instantie gestopt hebt.

Starten van een instantie kan door 
[source,shell]
---- 
<SOLR_INSTALL_DIR>/bin/solr start -c -p <poortnummer> -z <zookeeper-ensamble-connectie-string> -s <node-data-dir>/solr               
---- 
uit te voeren vanaf een command prompt.

=== Cassandra cluster

Browse naar http://www.datastax.com/documentation/cassandra/2.0/cassandra/gettingStartedCassandraIntro.html en volg de handleidingen voor het installeren en initializeren
van een Cassandra cluster.
Maak hierna een keyspace aan met de gewenste replication factor, en start Cassandra. Nadat Cassandra gestart is kunt u het volgende command
[source,shell]
---- 
<CASSANDRA_INSTALL_DIR>/bin/cqlsh -f <ETM_UNZIP_DIR>/resources/cassandra/cassandra-setup-cluster.cql
----
uitvoeren vanaf een command prompt. Het script zal er voor zorgen dat de juiste tabellen worden aangemaakt.

=== Wildfly cluster

Het opzetten van een Wildfly cluster is minder noodzakelijk. Het enige ETM component wat een een sessie gebruikt en daarmee geschikt zou zijn voor session-replication is
etm-gui-{etm_version}.war. Binnen de sessie wordt enkel bewaard of een gebruiker is ingelogd, en zo ja, met welke rollen. Als u het acceptabel vindt dat een gebruiker opnieuw
moet inloggen indien een server uitvalt, dan volstaat het dubbel uitvoeren van Wildfly servers zonder replication. Door middel van een load-balancer voor Wildfly zou de 
eindgebruiker naar actieve Wildfly instanties gerouteerd kunnen worden. Let wel, bij een dergelijke opstelling moeten de ETM componenten handmatig op de afzonderlijke machines
gedeployed worden.

Wilt u evengoed gebruik maken van een geclusterde Wildfly opstelling, waar de eindgebruiker niets mag merken van eventuele uitval van Wildfly instanties, volg dan de handleiding 
op https://docs.jboss.org/author/display/WFLY8/High+Availability+Guide

Zodra uw gewenste Wildfly cluster indeling is geinstalleerd moet er een security-domain met de naam "etm" worden aangemaakt. Een voorbeeld hiervan is te vinden in de 
<<standalone-wildfly, Standalone Wildfly>> paragraaf. Dit voorbeeld maakt via een RealmRedirect gebruik van property bestanden voor het beheer van uw gebruikers, maar er zijn 
meerdere mogelijkheden. Zo is het bijvoorbeeld ook mogelijk om een connectie te leggen met een LDAP server voor het autoriseren en authenticeren van gebruikers.

Als laatste moet er per Wildfly instantie een 3-tal System Properties worden toegevoegd. 
[options="header"]
|=======================
|Key|Value
|etm.nodename|<een unieke node name>
|etm.zookeeper.clients|<zookeeper connectie string>
|etm.zookeeper.namespace|<dev>
|=======================

[[chap-ETM_Installation-ETM_Components]]
== ETM componenten

ETM bestaat uit een verschillend aantal componenten die gedeployed kunnen worden in Wildfly. Kopieer de gewenste componenten naar <WILDFLY_INSTALL_DIR>/standalone/deployments 
waar ze opgepakt worden door Wildfly. Het deployment proces duurt hierna enkele seconden.
 
=== ETM gui
De ETM gui is de ETM component waarmee u uw events kunt monitoren, doorzoeken en beheren. Om de ETM gui te gebruiken dient u de component etm-gui-{etm_version}.war te 
deployen in Wildfly. Na de deployment zijn er 3 urls beschikbaar gekomen:

* http://localhost:8080/etm/search/ voor het zoeken van telemetry events.
* http://localhost:8080/etm/dashboard/ voor het monitoren van events.
* http://localhost:8080/etm/admin/ voor het beheren en administreren van het ETM cluster.  

Een uitgebreidere uitleg is beschikbaar in de gebruikershandleiding.

=== ETM rest processor
Om events aan ETM toe te voegen via een rest service dient u de component etm-processor-rest-{etm_version}.war te deployen in Wildfly. Na het deployen kunt u events toevoegen
door json data naar url http://localhost:8080/etm/processor/rest/event/add te posten.

Een beschrijving over de layout van de json data is terug te vinden in de gebruikershandleiding.

=== ETM mdb processor
Om events aan ETM toe te voegen via een JMS topic of JMS queue dient u de component etm-processor-mdb-{etm_version}.war te deployen in Wildfly. De MDB maakt default verbinding
met een queue onder de jndi naam "jms/queue/EtmNotification". 

Als dit niet gewenst is moet er een aanpassing in etm-processor-mdb-{etm_version}.war zelf doorgevoerd worden. Unzip
hiervoor etm-processor-mdb-{etm_version}.war naar een gewenste lokatie en pas daarna het bestand WEB-INF/ejb-jar.xml aan. Als u bijvoorbeeld verbinding wilt maken met een 
IBM MQ Queue en gebruik maakt van de "wmq.jmsra.rar" resource adapter moet het activation-config element als volgt gevuld worden:
[source,xml]
----
<activation-config-property> 
    <activation-config-property-name>destinationType</activation-config-property-name>  
    <activation-config-property-value>javax.jms.Queue</activation-config-property-value>
</activation-config-property>
<activation-config-property>  
    <activation-config-property-name>destination</activation-config-property-name>  
    <activation-config-property-value>${jms.queue.etm}</activation-config-property-value>  
</activation-config-property>  
<activation-config-property>  
    <activation-config-property-name>useJNDI</activation-config-property-name>  
    <activation-config-property-value>false</activation-config-property-value>  
</activation-config-property>                  
<activation-config-property>  
    <activation-config-property-name>channel</activation-config-property-name>  
    <activation-config-property-value>${jms.queue.manager.channel}</activation-config-property-value>  
</activation-config-property>                  
<activation-config-property>  
    <activation-config-property-name>hostName</activation-config-property-name>  
    <activation-config-property-value>${jms.queue.manager.host}</activation-config-property-value>  
</activation-config-property>                  
<activation-config-property>  
    <activation-config-property-name>queueManager</activation-config-property-name>  
    <activation-config-property-value>${jms.queue.manager.name}</activation-config-property-value>  
</activation-config-property>                  
<activation-config-property>  
    <activation-config-property-name>port</activation-config-property-name>  
    <activation-config-property-value>${jms.queue.manager.port}</activation-config-property-value>  
</activation-config-property>                  
<activation-config-property>  
    <activation-config-property-name>transportType</activation-config-property-name>  
    <activation-config-property-value>CLIENT</activation-config-property-value>  
</activation-config-property>
----

Zip de directory structuur opnieuw naar etm-processor-mdb-{etm_version}.war en deploy dit bestand hierna. De MDB maakt nu gebruik van system properties om de omgeving 
specifieke eigenschappen zoals de queue naam uit te lezen. Dit zijn de waardes die beschreven als "${<waarde>}" in de ejb-jar.xml voorkomen. U hoeft hier geen 
gebruik te maken van system properties, maar kunt hier ook gewoon harde waardes invullen.

Indien u gebruik van system properties gaat maken, vergeet deze dan niet op te voeren in de Wildfly administration console. Ook moet u nog een aanpassing in de 
standalone.xml/domain.xml doorvoeren die ervoor zorgt dat de variabelen uit ejb-jar.xml worden vervangen door de system properties zelf. Zorg ervoor dat het "ee" subsystem
de volgende waardes bevat:
[source,xml]
----
<spec-descriptor-property-replacement>true</spec-descriptor-property-replacement>
<jboss-descriptor-property-replacement>true</jboss-descriptor-property-replacement>
----
De tweede regel is niet strikt noodzakelijk, maar kan u helpen bij de onderstaande stap.

Indien de MDB geen gebruik maakt van de default resource adapter die u in Wildfly geconfigureerd heeft moet u wederom een aanpassing doen in etm-processor-mdb-{etm_version}.war.
Wijzigen hiervoor de naam van het bestand WEB-INF/jboss-ejb3-ra-adapter-example.xml naar WEB-INF/jboss-ejb3.xml, en pas de inhoud zo aan dat hier de gewenste resource adapter
wordt genoemd. Ook hier kunt u weer gebruik maken van system properties door de waarde in de vorm "${<waarde>}" te gebruiken. Als u hiervoor kiest is de tweede regel uit de xml
code hierboven genoemd echter wel noodzakelijk.

Uw MDB is nu klaar voor gebruik. Een beschrijving over de inhoud waaraan de JMS Message moet voldoen die de MDB uitleest is terug te vinden in de gebruikershandleiding.

=== ETM web service processor
Om events aan ETM toe te voegen via een web service dient u de component etm-processor-ws-{etm_version}.war te deployen in Wildfly. Na het deployen is de wsdl van de 
web service beschikbaar op http://localhost:8080/etm/processor/ws/processorservice?wsdl

Als Wildfly achter een proxy draait, en het soap address in de wsdl dynamisch opgezet moet worden moet dit aangegeven worden in de Wildfly configuratie. Zorg er in dat geval voor
dat het webservices subsystem in de standalone.xml of domain.xml de volgende waardes bevat:
[source,xml]
----
<modify-wsdl-address>true</modify-wsdl-address>
<wsdl-host>jbossws.undefined.host</wsdl-host>
----

=== ETM data behoud
Om events na verloop van tijd uit ETM te verwijderen dient u de component etm-scheduler-retention-{etm_version}.war te deployen in Wildfly. Voor dit component is geen overige 
configuratie nodig. Een beschrijving voor het instellen van de bewaartijd van events is terug te vinden in de gebruikershandleiding.

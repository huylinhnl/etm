= ETM Installatiehandleiding
:doctype: book
:docinfo: docinfo

[[chap-ETM_Installation-Introduction]]
== Introductie

Deze handleiding leidt u door het installatie proces van Enterprise Telemetry Monitor, kortweg ETM. Indien u ETM wilt evalueren kies dan
voor de <<chap-ETM_Installation-Single_Machine_Installation, installatie op 1 machine>>. Wilt u ETM in een productie omgeving installeren 
kies dan voor de <<chap-ETM_Installation-Clustered_Installation, geclusterde installatie>>. In dit document zal veelvuldig gerefereerd 
worden naar '<ETM_UNZIP_DIR>'. Hiermee wordt de directory bedoeld waar u uw ETM download heeft uitgepakt.

[[chap-ETM_Installation-System_Requirements]]
== Systeemeisen
* Java {java_version}
* Wildfly {wildfly_version}
* Elasticsearch {elasticsearch_version}

ETM is ontwikkeld en getest met OpenJDK {java_version} op Fedora Linux. Aangezien ETM een pure Java applicatie is, is het aannemelijk
dat ETM ook zonder problemen op andere besturingssystemen werkt.

=== Geheugen
ETM werkt het best met machines die zijn uitgerust met 8 tot 64 GB RAM. Bij het overschreiden van deze grenzen gaat er veel tijd verloren 
met het garbage collection proces van de JVM. Het is beter te schalen naar meer machines in plaats van grotere machines. Dit maakt uw cluster
dynamischer en is uiteindelijk goedkoper.

=== Hard disks
Hard disks zijn in de meeste gevallen de bottle neck van uw ETM cluster. Veel van de werkzaamheden in ETM zullen resulteren in schrijfacties
naar de hard disks. Kies daarom voor een zo snel mogelijk hard disk medium. De voorkeur gaat uit voor SSD's, maar als deze buiten budget 
liggen kies dan voor hard disks met een zo hoog mogelijk toerental. Ook een raid-0 opstelling komt de performance van ETM ten goede. Laat het 
filesysteem nooit repliceren met bijvoorbeeld raid-1, aangezien ETM ingebouwde replicatiemogelijkheden heeft.

=== CPU
De CPU requirements van ETM doen er minder toe dan het geheugen of de hard disks. Het is waarschijnlijk dat uw cluster eerder tegen de 
limieten van het geheugen en/of de hard disks aanloopt, dan de limiet van uw cpu's. Als u moet kiezen tussen snellere CPU's of meerdere cores,
kies dan altijd voor meerdere cores. ETM maakt veelvuldig gebruik van parallele verwerking wat het beste werkt met meerdere cores.


[[chap-ETM_Installation-Single_Machine_Installation]]
== Installatie op 1 machine
IMPORTANT: Voor evaluatie doeleinden kan het handig zijn ETM op 1 enkele machine te installeren. Dit is echter geen ondersteunde productie
configuratie. Om de volledige voordelen op het gebied van schaalbaarheid en hoge beschikbaarheid die ETM ondersteund te benutten is een
<<chap-ETM_Installation-Clustered_Installation, geclusterde installatie>> noodzakelijk.  

Voor deze installatie gelden de volgende specificaties:

* Een standalone Elastisearch {elasticsearch_version} installatie.
* Een standalone Wildfly {wildfly_version} draaiend op het 'standalone' profiel.

Voor deze installatie geldt dat er geen replicatie, hoge beschikbaarheid en schaalbaarheid mogelijk is.

[[standalone-elasticsearch]]
=== Standalone Elastisearch
Download Elasticsearch {elasticsearch_version} van de Elastic https://www.elastic.co/downloads/past-releases[website], en extract de bestanden van het 
gedownloade archief. Het archief kan uitgepakt worden naar elke willekeurige locatie. Deze locatie wordt vanaf nu <ELASTICSEARCH_INSTALL_DIR> genoemd.

Open nadat Elasticsearch is uitgepakt het bestand <ELASTICSEARCH_INSTALL_DIR>/config/elasticsearch.yml en pas de volgende waardes aan:

[options="header"]
|=======================
|Parameter|Waarde
|cluster.name|<de naam van uw ETM cluster>
|node.name |<de unieke naam van uw node, bijv de hostname>
|bootstrap.mlockall|true
|http.enabled|false
|index.translog.durability|async
|=======================

Kopieer vervolgende de bestanden uit <ETM_UNZIP_DIR>/resources/elasticsearch/scripts/ naar <ELASTICSEARCH_INSTALL_DIR>/config/scripts/. Het is mogelijk
dat de scripts directory nog niet bestaat en deze nog aangemaakt moet worden. 

Nadat de wijzigingen zijn doorgevoerd kunt u Elasticsearch starten door  
[source,shell] 
----
<ELASTICSEARCH_INSTALL_DIR>/bin/elasticsearch 
----
uit te voeren vanaf een command prompt.

[[standalone-wildfly]]
=== Standalone Wildfly
Download Wildfly {wildfly_version} van de Wildfly http://wildfly.org/downloads/[website], en extract de bestanden van het gedownloade archief.
Het archief kan uitgepakt worden naar elke willekeurige locatie. Deze locatie wordt vanaf nu <WILDFLY_INSTALL_DIR> genoemd.

Om een administratieve gebruiker toe te voegen voer 
[source,shell]
----
<WILDFLY_INSTALL_DIR>/bin/add-user.sh
----
uit vanaf een command prompt. Wees er zeker van dat de gebruiker een 'Management User' is die is toegevoegd aan het 'ManagementRealm'.

Deze gebuiker is nodig om in het administration console van Wildfly in te loggen. ETM heeft ook een gebruiker nodig waarmee ingelogd kan worden in ETM zelf.
Voer hiervoor nogmaals het add-user.sh script uit, maar zorg er deze keer voor dat de gebruiker een 'Application User' is. Ook moet de gebruiker de volgende rollen krijgen:

* etm-administrator
* etm-searcher
* etm-controller 

Open nu het bestand <WILDFLY_INSTALL_DIR>/standalone/configuration/standalone.xml en voeg de volgende xml snippet toe aan de 'security-realms':
[source,xml]
----
<security-realm name="EtmRealm">
    <authentication>
        <local default-user="$local" allowed-users="*" skip-group-loading="true"/>
        <properties path="application-users.properties" relative-to="jboss.server.config.dir"/>
    </authentication>
    <authorization>
        <properties path="application-roles.properties" relative-to="jboss.server.config.dir"/>
    </authorization>
</security-realm>
----

Voeg in ditzelfde bestand de volgende xml snippet toe aan de 'security-domains':
[source,xml]
----
<security-domain name="etm" cache-type="default">
    <authentication>
        <login-module code="RealmDirect" flag="required">
            <module-option name="password-stacking" value="useFirstPass"/>
        </login-module>
    </authentication>
</security-domain>
----

Wildfly is nu klaar om gestart te worden. Voer hiervoor 
[source,shell]
---- 
<WILDFLY_INSTALL_DIR>/bin/standalone.sh
----
uit vanaf een command prompt.

Open http://localhost:9990/console/ in een browser nadat Wildfly gestart is en login met de administratieve gebruiker die u hiervoor aangemaakt heeft. 
Selecteer het 'Configuration' menu en klik op System Properties op het submenu aan de linker kant. Voeg hier de volgende properties toe:
[options="header"]
|=======================
|Key|Value
|etm.cluster.name|<de naam van uw ETM cluster>
|=======================

De volgende stap is om de gewenste ETM componenten te deployen. Afhankelijk van uw behoefte kunt u 1 of meerdere componenten deployen vanaf de
<ETM_UNZIP_DIR>/components directory.

Kopieer de gewenste componenten naar <WILDFLY_INSTALL_DIR>/standalone/deployments waar ze opgepakt worden door Wildfly. Het deployment proces
duurt hierna enkele seconden. Bekijk voor een gedetailleerd overzicht van de componenten en hun instellingen het hoofdstuk <<chap-ETM_Installation-ETM_Components, ETM componenten>>.

[[chap-ETM_Installation-Clustered_Installation]]
== Geclusterde installatie
IMPORTANT: ETM is een op JEE gebaseerde Java applicatie die binnen Wildfly gedeployed kan worden. ETM heeft een verbinding nodig met Elasticsearch om
volledig te functioneren. Hoe u uw Wildfly en Elasticsearch clusters in gaat richten hangt af van uw wensen en kan niet in 1 enkele installatie 
handleiding samengevat worden. Dit hoofdstuk kan als voorbeeld genomen worden voor het opzetten van uw Wildfly en Elasticsearch clusters, 
maar voor een optimale situatie zullen deze clusters zo geconfigureerd moeten worden dat deze ideaal zijn voor uw wensen. 

Voor uitgebreide handleidingen dient u de handleidingen van Wildfly en Elasticsearch te raadplegen:

* https://docs.jboss.org/author/display/WFLY9/Documentation/[Wildfly documentatie]
* https://www.elastic.co/guide/en/elasticsearch/reference/current/[Elasticsearch documentatie]

=== Elasticsearch cluster
Een Elasticsearch cluster heeft een zogenaamde master node nodig om goed te functioneren. Deze master node bepaald of een index aangemaakt mag worden, en op welke nodes
in het cluster dit mag gebeuren. Het bepalen welke node de master node wordt gebeurd aan de hand van een stemmingsronde onder de nodes. Om een stabiel cluster te krijgen
is het dus noodzakelijk een oneven aantal mogelijke master nodes te hebben. 1 master node zorgt voor een single-point-of-failure. Het dringend advies is om 3 nodes in
te zetten als dedicated master nodes. Deze nodes zullen geen data bevatten en zijn enkel verantwoordelijk voor het cluster management. Is uw cluster kleinschalig, dan valt 
te overwegen enkele data nodes ook als master nodes in te zetten.


==== Installatie Elasticsearch master nodes
Download Elasticsearch {elasticsearch_version} van de Elastic https://www.elastic.co/downloads/past-releases[website], en extract de bestanden van het 
gedownloade archief. Het archief kan uitgepakt worden naar elke willekeurige locatie. Deze locatie wordt vanaf nu <ELASTICSEARCH_INSTALL_DIR> genoemd.

Open nadat Elasticsearch is uitgepakt het bestand <ELASTICSEARCH_INSTALL_DIR>/config/elasticsearch.yml en pas de volgende waardes aan:

[options="header"]
|=======================
|Parameter|Waarde
|cluster.name|<de naam van uw ETM cluster>
|node.name |<de unieke naam van uw node, bijv de hostname_master>
|bootstrap.mlockall|true
|http.enabled|false
|node.data|false
|node.master|true
|transport.tcp.port|<de poort waarop de listener moet draaien, bij 9301>
|network.host|<de naam of het adres voor de socket binding, bijvoorbeeld 10.0.0.1>
|discovery.zen.ping.multicast.enabled|false
|discovery.zen.ping.unicast.hosts|<de lijst met ip-adressen en poort van andere master nodes, bijvoorbeeld ["10.0.0.1:9302", "10.0.0.1:9303"]
|discovery.zen.minimum_master_nodes: <1 meer dan de helft van het aantal master nodes, in dit voorbeeld dus 2> 
|=======================

Nadat de wijzigingen zijn doorgevoerd kunt u Elasticsearch master nodes starten door  
[source,shell] 
----
<ELASTICSEARCH_INSTALL_DIR>/bin/elasticsearch 
----
uit te voeren vanaf een command prompt. Zodra het aantal nodes gespecificeerd in 'discovery.zen.minimum_master_nodes' gestart is zal er een master node aangewezen worden.
 
==== Installatie Elasticsearch data nodes
Nadat de master nodes gestart zijn is het tijd om de data nodes te gaan installeren en configureren. Extract wederom de bestanden uit het gedownloadde archief naar
een gewenste locatie. Open nadat Elasticsearch is uitgepakt het bestand <ELASTICSEARCH_INSTALL_DIR>/config/elasticsearch.yml en pas de volgende waardes aan:

[options="header"]
|=======================
|Parameter|Waarde
|cluster.name|<de naam van uw ETM cluster>
|node.name |<de unieke naam van uw node, bijv de hostname_master>
|http.enabled|false
|node.data|true
|node.master|false
|transport.tcp.port|<de poort waarop de listener moet draaien, bij 9310>
|network.host|<de naam of het adres voor de socket binding, bijvoorbeeld 10.0.0.1>
|discovery.zen.ping.multicast.enabled|false
|discovery.zen.ping.unicast.hosts|<de lijst met ip-adressen en poort van de master nodes, bijvoorbeeld ["10.0.0.1:9301", "10.0.0.1:9302", "10.0.0.1:9303"]
|discovery.zen.minimum_master_nodes: <1 meer dan de helft van het aantal master nodes, in dit voorbeeld dus 2>
|index.translog.durability|async 
|=======================

Kopieer vervolgende de bestanden uit <ETM_UNZIP_DIR>/resources/elasticsearch/scripts/ naar <ELASTICSEARCH_INSTALL_DIR>/config/scripts/. Het is mogelijk
dat de scripts directory nog niet bestaat en deze nog aangemaakt moet worden. 

Nadat de wijzigingen zijn doorgevoerd kunt u Elasticsearch starten door  
[source,shell] 
----
<ELASTICSEARCH_INSTALL_DIR>/bin/elasticsearch 
----
uit te voeren vanaf een command prompt.

Om replicatie van de data mogelijk te maken is het nodig meerdere data instanties aan te maken.

=== Wildfly cluster

Het opzetten van een Wildfly cluster is minder noodzakelijk. Het enige ETM component dat een sessie gebruikt en daarmee geschikt zou zijn voor session-replication is
etm-gui-{etm_version}.war. Binnen de sessie wordt enkel bewaard of een gebruiker is ingelogd, en zo ja, met welke rollen. Als u het acceptabel vindt dat een gebruiker opnieuw
moet inloggen indien een server uitvalt, dan volstaat het dubbel uitvoeren van Wildfly servers zonder replication. Door middel van een load-balancer voor Wildfly zou de 
eindgebruiker naar actieve Wildfly instanties gerouteerd kunnen worden. Let wel, bij een dergelijke opstelling moeten de ETM componenten handmatig op de afzonderlijke machines
gedeployed worden.

Wilt u evengoed gebruik maken van een geclusterde Wildfly opstelling, waar de eindgebruiker niets mag merken van eventuele uitval van Wildfly instanties, volg dan de handleiding 
op https://docs.jboss.org/author/display/WFLY9/High+Availability+Guide

Zodra uw gewenste Wildfly cluster indeling is geinstalleerd moet er een security-domain met de naam "etm" worden aangemaakt. Een voorbeeld hiervan is te vinden in de 
<<standalone-wildfly, Standalone Wildfly>> paragraaf. Dit voorbeeld maakt via een RealmRedirect gebruik van property bestanden voor het beheer van uw gebruikers, maar er zijn 
meerdere mogelijkheden. Zo is het bijvoorbeeld ook mogelijk om een connectie te leggen met een LDAP server voor het autoriseren en authenticeren van gebruikers.

Als laatste moet er per Wildfly instantie een aantal System Properties worden toegevoegd. 
[options="header"]
|=======================
|Key|Value
|etm.cluster.name|<de naam van uw ETM cluster>
|etm.master.addresses|Een komma gescheiden lijst van Elasticsearch master nodes in de vorm van ip-adres:poortnr.
|etm.node.name|Optioneel, de naam van deze node.
|=======================

[[chap-ETM_Installation-ETM_Components]]
== ETM componenten

ETM bestaat uit een verschillend aantal componenten die gedeployed kunnen worden in Wildfly. Kopieer de gewenste componenten naar <WILDFLY_INSTALL_DIR>/standalone/deployments 
waar ze opgepakt worden door Wildfly. Het deployment proces duurt hierna enkele seconden.
 
=== ETM gui
De ETM gui is de ETM component waarmee u uw events kunt monitoren, doorzoeken en beheren. Om de ETM gui te gebruiken dient u de component etm-gui-{etm_version}.war te 
deployen in Wildfly. Na de deployment zijn er 3 urls beschikbaar gekomen:

* http://localhost:8080/etm/search/ voor het zoeken van telemetry events.
* http://localhost:8080/etm/dashboard/ voor het monitoren van events.
* http://localhost:8080/etm/admin/ voor het beheren en administreren van het ETM cluster.  

Een uitgebreidere uitleg is beschikbaar in de gebruikershandleiding.

=== ETM rest processor
Om events aan ETM toe te voegen via een rest service dient u de component etm-processor-rest-{etm_version}.war te deployen in Wildfly. Na het deployen kunt u events toevoegen
door json data naar url http://localhost:8080/etm/processor/rest/event/add te posten.

Een beschrijving over de layout van de json data is terug te vinden in de gebruikershandleiding.

=== ETM mdb processor
Om events aan ETM toe te voegen via een JMS topic of JMS queue dient u de component etm-processor-mdb-{etm_version}.war te deployen in Wildfly. De MDB maakt default verbinding
met een queue onder de jndi naam "jms/queue/EtmNotification". 

Als dit niet gewenst is moet er een aanpassing in etm-processor-mdb-{etm_version}.war zelf doorgevoerd worden. Unzip
hiervoor etm-processor-mdb-{etm_version}.war naar een gewenste lokatie en pas daarna het bestand WEB-INF/ejb-jar.xml aan. Als u bijvoorbeeld verbinding wilt maken met een 
IBM MQ Queue en gebruik maakt van de "wmq.jmsra.rar" resource adapter moet het activation-config element als volgt gevuld worden:
[source,xml]
----
<activation-config-property> 
    <activation-config-property-name>destinationType</activation-config-property-name>  
    <activation-config-property-value>javax.jms.Queue</activation-config-property-value>
</activation-config-property>
<activation-config-property>  
    <activation-config-property-name>destination</activation-config-property-name>  
    <activation-config-property-value>${jms.queue.etm}</activation-config-property-value>  
</activation-config-property>  
<activation-config-property>  
    <activation-config-property-name>useJNDI</activation-config-property-name>  
    <activation-config-property-value>false</activation-config-property-value>  
</activation-config-property>                  
<activation-config-property>  
    <activation-config-property-name>channel</activation-config-property-name>  
    <activation-config-property-value>${jms.queue.manager.channel}</activation-config-property-value>  
</activation-config-property>                  
<activation-config-property>  
    <activation-config-property-name>hostName</activation-config-property-name>  
    <activation-config-property-value>${jms.queue.manager.host}</activation-config-property-value>  
</activation-config-property>                  
<activation-config-property>  
    <activation-config-property-name>queueManager</activation-config-property-name>  
    <activation-config-property-value>${jms.queue.manager.name}</activation-config-property-value>  
</activation-config-property>                  
<activation-config-property>  
    <activation-config-property-name>port</activation-config-property-name>  
    <activation-config-property-value>${jms.queue.manager.port}</activation-config-property-value>  
</activation-config-property>                  
<activation-config-property>  
    <activation-config-property-name>transportType</activation-config-property-name>  
    <activation-config-property-value>CLIENT</activation-config-property-value>  
</activation-config-property>
----

Zip de directory structuur opnieuw naar etm-processor-mdb-{etm_version}.war en deploy dit bestand hierna. De MDB maakt nu gebruik van system properties om de omgeving 
specifieke eigenschappen zoals de queue naam uit te lezen. Dit zijn de waardes die beschreven als "${<waarde>}" in de ejb-jar.xml voorkomen. U hoeft hier geen 
gebruik te maken van system properties, maar kunt hier ook gewoon harde waardes invullen.

Indien u gebruik van system properties gaat maken, vergeet deze dan niet op te voeren in de Wildfly administration console. Ook moet u nog een aanpassing in de 
standalone.xml/domain.xml doorvoeren die ervoor zorgt dat de variabelen uit ejb-jar.xml worden vervangen door de system properties zelf. Zorg ervoor dat het "ee" subsystem
de volgende waardes bevat:
[source,xml]
----
<spec-descriptor-property-replacement>true</spec-descriptor-property-replacement>
<jboss-descriptor-property-replacement>true</jboss-descriptor-property-replacement>
----
De tweede regel is niet strikt noodzakelijk, maar kan u helpen bij de onderstaande stap.

Indien de MDB geen gebruik maakt van de default resource adapter die u in Wildfly geconfigureerd heeft moet u wederom een aanpassing doen in etm-processor-mdb-{etm_version}.war.
Wijzigen hiervoor de naam van het bestand WEB-INF/jboss-ejb3-ra-adapter-example.xml naar WEB-INF/jboss-ejb3.xml, en pas de inhoud zo aan dat hier de gewenste resource adapter
wordt genoemd. Ook hier kunt u weer gebruik maken van system properties door de waarde in de vorm "${<waarde>}" te gebruiken. Als u hiervoor kiest is de tweede regel uit de xml
code hierboven genoemd echter wel noodzakelijk.

Uw MDB is nu klaar voor gebruik. Een beschrijving over de inhoud waaraan de JMS Message moet voldoen die de MDB uitleest is terug te vinden in de gebruikershandleiding.

=== ETM web service processor
Om events aan ETM toe te voegen via een web service dient u de component etm-processor-ws-{etm_version}.war te deployen in Wildfly. Na het deployen is de wsdl van de 
web service beschikbaar op http://localhost:8080/etm/processor/ws/processorservice?wsdl

Als Wildfly achter een proxy draait, en het soap address in de wsdl dynamisch opgezet moet worden moet dit aangegeven worden in de Wildfly configuratie. Zorg er in dat geval voor
dat het webservices subsystem in de standalone.xml of domain.xml de volgende waardes bevat:
[source,xml]
----
<modify-wsdl-address>true</modify-wsdl-address>
<wsdl-host>jbossws.undefined.host</wsdl-host>
----

=== ETM data behoud
Om events na verloop van tijd uit ETM te verwijderen dient u de component etm-scheduler-retention-{etm_version}.war te deployen in Wildfly. Voor dit component is geen overige 
configuratie nodig. Een beschrijving voor het instellen van de bewaartijd van events is terug te vinden in de gebruikershandleiding.

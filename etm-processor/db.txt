create keyspace etm with replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };
use etm;

create table telemetry_event ( 
    id timeuuid primary key, 
    application text,
    content text, 
    correlationId timeuuid,
    creationTime timestamp,
    direction text, 
    endpoint text, 
    expiryTime timestamp, 
    name text,
    correlationCreationTime timestamp, 
    sourceCorrelationId text, 
    sourceId text, 
    transactionId timeuuid, 
    transactionName text,
    type text
);

create table transaction_event (
    transactionName text,
    startTime timestamp,
    transactionId timeuuid,
    expiryTime timestamp,
    finishTime timestamp,
    primary key (transactionName, startTime, transactionId)
);

create table event_occurrences (
    timeunit timestamp,
    type text,
    name text,
    primary key (timeunit, type, name)
);

create table sourceid_id_correlation (
    sourceId text primary key,
    creationTime timestamp,
    id timeuuid,
    transactionId timeuuid,
    transactionName text
);

create table correlation_data (
    id timeuuid,
    name text,
    value text,
    transactionId timeuuid, 
    transactionName text,
    primary key (id, name, value)
);

create table endpoint_config (
    endpoint text primary key,
    direction text,
    applicationParsers list<text>,
    eventNameParsers list<text>,
    correlationParsers map<text, text>,
    transactionNameParsers list<text>,
);

create table application_counter (
    application text,
    timeunit timestamp,
    count counter,
    messageRequestCount counter,
    incomingMessageRequestCount counter,
    outgoingMessageRequestCount counter,
    messageResponseCount counter,
    incomingMessageResponseCount counter,
    outgoingMessageResponseCount counter,
    messageDatagramCount counter,
    incomingMessageDatagramCount counter,
    outgoingMessageDatagramCount counter,
    messageResponseTime counter,
    incomingMessageResponseTime counter,
    outgoingMessageResponseTime counter,
    primary key (application, timeunit)
);

create table eventname_counter (
    eventName text,
    timeunit timestamp,
    count counter,
    messageRequestCount counter,
    messageResponseCount counter,
    messageDatagramCount counter,
    messageResponseTime counter,
    primary key (eventName, timeunit)
);

create table application_event_counter (
    application text,
    eventName text,
    timeunit timestamp,
    count counter,
    messageRequestCount counter,
    incomingMessageRequestCount counter,
    outgoingMessageRequestCount counter,
    messageResponseCount counter,
    incomingMessageResponseCount counter,
    outgoingMessageResponseCount counter,
    messageDatagramCount counter,
    incomingMessageDatagramCount counter,
    outgoingMessageDatagramCount counter,
    messageResponseTime counter,
    incomingMessageResponseTime counter,
    outgoingMessageResponseTime counter,
    primary key (application, eventName, timeunit)
);

create table transactionname_counter (
    transactionName text,
    timeunit timestamp,
    count counter,
    transactionStart counter,
    transactionFinish counter,
    transactionResponseTime counter,
    primary key (transactionName, timeunit)
);

insert into endpoint_config(endpoint, eventNameParsers, correlationParsers) values ('*', ['xpath:local-name(/*)'], {'CustomerId':'xpath:/*/relatienummer'});
insert into endpoint_config(endpoint, direction, applicationParsers, transactionNameParsers) values ('KCS.REQ.ESB', 'OUTGOING', ['KCS'], ['xpath:substring(local-name(//*[ends-with(name(), ''Request'')][1]), 0, string-length(local-name(//*[ends-with(name(), ''Request'')][1])) - 6)']);
insert into endpoint_config(endpoint, direction, applicationParsers) values ('ESB.REQ.LG5', 'INCOMING', ['Nieuw Woon']);
insert into endpoint_config(endpoint, direction, applicationParsers) values ('LG5.REQ.ESB', 'OUTGOING', ['Nieuw Woon']);
insert into endpoint_config(endpoint, direction, applicationParsers) values ('ESB.RPL.LG5', 'INCOMING', ['Nieuw Woon']);
insert into endpoint_config(endpoint, direction, applicationParsers) values ('LG5.RPL.ESB', 'OUTGOING', ['Nieuw Woon']);
insert into endpoint_config(endpoint, direction, applicationParsers) values ('ESB.RPL.KCS', 'INCOMING', ['KCS']);